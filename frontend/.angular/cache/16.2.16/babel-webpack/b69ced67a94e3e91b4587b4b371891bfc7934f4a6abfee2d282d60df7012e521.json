{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api';\n  }\n  // Get all users (Admin only)\n  getUsers() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n  // Get user by ID (Admin only)\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/users/${id}`);\n  }\n  // Update user role (Admin only)\n  updateUserRole(userId, roleData) {\n    return this.http.put(`${this.apiUrl}/users/${userId}/role`, roleData);\n  }\n  // Delete user (Admin only)\n  deleteUser(userId) {\n    return this.http.delete(`${this.apiUrl}/users/${userId}`);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","getUsers","get","getUserById","id","updateUserRole","userId","roleData","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sawoe\\Desktop\\Assignment\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User, UpdateRoleRequest } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = 'http://localhost:3000/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get all users (Admin only)\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.apiUrl}/users`);\r\n  }\r\n\r\n  // Get user by ID (Admin only)\r\n  getUserById(id: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  // Update user role (Admin only)\r\n  updateUserRole(userId: string, roleData: UpdateRoleRequest): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/users/${userId}/role`, roleData);\r\n  }\r\n\r\n  // Delete user (Admin only)\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/users/${userId}`);\r\n  }\r\n} "],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EACtD;EAEA;EACAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC1D;EAEA;EACAC,cAAcA,CAACC,MAAc,EAAEC,QAA2B;IACxD,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,MAAM,UAAUM,MAAM,OAAO,EAAEC,QAAQ,CAAC;EAC7E;EAEA;EACAE,UAAUA,CAACH,MAAc;IACvB,OAAO,IAAI,CAACP,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,UAAUM,MAAM,EAAE,CAAC;EAC3D;;;uBAvBWT,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}