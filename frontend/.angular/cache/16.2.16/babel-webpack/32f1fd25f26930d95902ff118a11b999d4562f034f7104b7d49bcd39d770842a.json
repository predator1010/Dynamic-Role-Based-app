{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UsersComponent = class UsersComponent {\n  constructor(userService, roleService) {\n    this.userService = userService;\n    this.roleService = roleService;\n    this.users = [];\n    this.roles = [];\n    this.loading = false;\n    this.error = '';\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.loadRoles();\n  }\n  loadUsers() {\n    this.loading = true;\n    this.userService.getUsers().subscribe({\n      next: users => {\n        this.users = users;\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Failed to load users';\n        this.loading = false;\n      }\n    });\n  }\n  loadRoles() {\n    this.roleService.getRoles().subscribe({\n      next: roles => {\n        this.roles = roles;\n      },\n      error: error => {\n        this.error = 'Failed to load roles';\n      }\n    });\n  }\n  updateUserRole(userId, newRole) {\n    this.userService.updateUserRole(userId, {\n      role: newRole\n    }).subscribe({\n      next: () => {\n        this.loadUsers(); // Reload users to get updated data\n      },\n\n      error: error => {\n        this.error = 'Failed to update user role';\n      }\n    });\n  }\n  deleteUser(userId) {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.userService.deleteUser(userId).subscribe({\n        next: () => {\n          this.loadUsers(); // Reload users after deletion\n        },\n\n        error: error => {\n          this.error = 'Failed to delete user';\n        }\n      });\n    }\n  }\n  getRoleBadgeClass(roleName) {\n    switch (roleName) {\n      case 'Admin':\n        return 'badge-admin';\n      case 'Editor':\n        return 'badge-editor';\n      case 'Viewer':\n        return 'badge-viewer';\n      default:\n        return 'badge-secondary';\n    }\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})], UsersComponent);","map":{"version":3,"names":["Component","UsersComponent","constructor","userService","roleService","users","roles","loading","error","ngOnInit","loadUsers","loadRoles","getUsers","subscribe","next","getRoles","updateUserRole","userId","newRole","role","deleteUser","confirm","getRoleBadgeClass","roleName","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sawoe\\Desktop\\Assignment\\frontend\\src\\app\\components\\users\\users.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { RoleService } from '../../services/role.service';\r\nimport { User, Role } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: User[] = [];\r\n  roles: Role[] = [];\r\n  loading = false;\r\n  error = '';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private roleService: RoleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n    this.loadRoles();\r\n  }\r\n\r\n  loadUsers(): void {\r\n    this.loading = true;\r\n    this.userService.getUsers().subscribe({\r\n      next: (users) => {\r\n        this.users = users;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.error = 'Failed to load users';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadRoles(): void {\r\n    this.roleService.getRoles().subscribe({\r\n      next: (roles) => {\r\n        this.roles = roles;\r\n      },\r\n      error: (error) => {\r\n        this.error = 'Failed to load roles';\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserRole(userId: string, newRole: string): void {\r\n    this.userService.updateUserRole(userId, { role: newRole }).subscribe({\r\n      next: () => {\r\n        this.loadUsers(); // Reload users to get updated data\r\n      },\r\n      error: (error) => {\r\n        this.error = 'Failed to update user role';\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUser(userId: string): void {\r\n    if (confirm('Are you sure you want to delete this user?')) {\r\n      this.userService.deleteUser(userId).subscribe({\r\n        next: () => {\r\n          this.loadUsers(); // Reload users after deletion\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Failed to delete user';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getRoleBadgeClass(roleName: string): string {\r\n    switch (roleName) {\r\n      case 'Admin': return 'badge-admin';\r\n      case 'Editor': return 'badge-editor';\r\n      case 'Viewer': return 'badge-viewer';\r\n      default: return 'badge-secondary';\r\n    }\r\n  }\r\n} "],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAMzBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IAPrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,EAAE;EAKP;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAD,SAASA,CAAA;IACP,IAAI,CAACH,OAAO,GAAG,IAAI;IACnB,IAAI,CAACJ,WAAW,CAACS,QAAQ,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAGT,KAAK,IAAI;QACd,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACE,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,sBAAsB;QACnC,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAI,SAASA,CAAA;IACP,IAAI,CAACP,WAAW,CAACW,QAAQ,EAAE,CAACF,SAAS,CAAC;MACpCC,IAAI,EAAGR,KAAK,IAAI;QACd,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,sBAAsB;MACrC;KACD,CAAC;EACJ;EAEAQ,cAAcA,CAACC,MAAc,EAAEC,OAAe;IAC5C,IAAI,CAACf,WAAW,CAACa,cAAc,CAACC,MAAM,EAAE;MAAEE,IAAI,EAAED;IAAO,CAAE,CAAC,CAACL,SAAS,CAAC;MACnEC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC;MACpB,CAAC;;MACDF,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,4BAA4B;MAC3C;KACD,CAAC;EACJ;EAEAY,UAAUA,CAACH,MAAc;IACvB,IAAII,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACzD,IAAI,CAAClB,WAAW,CAACiB,UAAU,CAACH,MAAM,CAAC,CAACJ,SAAS,CAAC;QAC5CC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC;QACpB,CAAC;;QACDF,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAG,uBAAuB;QACtC;OACD,CAAC;;EAEN;EAEAc,iBAAiBA,CAACC,QAAgB;IAChC,QAAQA,QAAQ;MACd,KAAK,OAAO;QAAE,OAAO,aAAa;MAClC,KAAK,QAAQ;QAAE,OAAO,cAAc;MACpC,KAAK,QAAQ;QAAE,OAAO,cAAc;MACpC;QAAS,OAAO,iBAAiB;;EAErC;CACD;AAzEYtB,cAAc,GAAAuB,UAAA,EAL1BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CAyE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}