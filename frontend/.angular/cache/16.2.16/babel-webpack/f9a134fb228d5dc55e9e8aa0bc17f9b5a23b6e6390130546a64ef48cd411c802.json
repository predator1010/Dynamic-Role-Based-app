{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n// Components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { ContentComponent } from './components/content/content.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n// Guards\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\n// Services\nimport { AuthService } from './services/auth.service';\nimport { UserService } from './services/user.service';\nimport { RoleService } from './services/role.service';\n// Interceptors\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// Routes configuration\nconst routes = [{\n  path: '',\n  redirectTo: '/dashboard',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'users',\n  component: UsersComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: ['Admin']\n  }\n}, {\n  path: 'roles',\n  component: RolesComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: ['Admin']\n  }\n}, {\n  path: 'content',\n  component: ContentComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'profile',\n  component: ProfileComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: '/dashboard'\n}];\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AuthService, UserService, RoleService, AuthGuard, RoleGuard, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, HttpClientModule, ReactiveFormsModule, FormsModule, RouterModule.forRoot(routes)]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent, RegisterComponent, DashboardComponent, UsersComponent, RolesComponent, ContentComponent, ProfileComponent],\n    imports: [BrowserModule, HttpClientModule, ReactiveFormsModule, FormsModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","ReactiveFormsModule","FormsModule","RouterModule","AppComponent","LoginComponent","RegisterComponent","DashboardComponent","UsersComponent","RolesComponent","ContentComponent","ProfileComponent","AuthGuard","RoleGuard","AuthService","UserService","RoleService","AuthInterceptor","routes","path","redirectTo","pathMatch","component","canActivate","data","roles","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","declarations","i1"],"sources":["C:\\Users\\sawoe\\Desktop\\Assignment\\frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { ContentComponent } from './components/content/content.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n// Guards\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { RoleGuard } from './guards/role.guard';\r\n\r\n// Services\r\nimport { AuthService } from './services/auth.service';\r\nimport { UserService } from './services/user.service';\r\nimport { RoleService } from './services/role.service';\r\n\r\n// Interceptors\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\n\r\n// Routes configuration\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { \r\n    path: 'dashboard', \r\n    component: DashboardComponent, \r\n    canActivate: [AuthGuard] \r\n  },\r\n  { \r\n    path: 'users', \r\n    component: UsersComponent, \r\n    canActivate: [AuthGuard, RoleGuard],\r\n    data: { roles: ['Admin'] }\r\n  },\r\n  { \r\n    path: 'roles', \r\n    component: RolesComponent, \r\n    canActivate: [AuthGuard, RoleGuard],\r\n    data: { roles: ['Admin'] }\r\n  },\r\n  { \r\n    path: 'content', \r\n    component: ContentComponent, \r\n    canActivate: [AuthGuard] \r\n  },\r\n  { \r\n    path: 'profile', \r\n    component: ProfileComponent, \r\n    canActivate: [AuthGuard] \r\n  },\r\n  { path: '**', redirectTo: '/dashboard' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    UsersComponent,\r\n    RolesComponent,\r\n    ContentComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    UserService,\r\n    RoleService,\r\n    AuthGuard,\r\n    RoleGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { } "],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAC1E,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,gBAAgB;AACjE,SAASC,YAAY,QAAgB,iBAAiB;AAEtD;AACA,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,gBAAgB,QAAQ,wCAAwC;AAEzE;AACA,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,QAAQ,qBAAqB;AAE/C;AACA,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AAErD;AACA,SAASC,eAAe,QAAQ,iCAAiC;;;AAEjE;AACA,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,YAAY;EAAEC,SAAS,EAAE;AAAM,CAAE,EACzD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEjB;AAAc,CAAE,EAC5C;EAAEc,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEhB;AAAiB,CAAE,EAClD;EACEa,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAEf,kBAAkB;EAC7BgB,WAAW,EAAE,CAACX,SAAS;CACxB,EACD;EACEO,IAAI,EAAE,OAAO;EACbG,SAAS,EAAEd,cAAc;EACzBe,WAAW,EAAE,CAACX,SAAS,EAAEC,SAAS,CAAC;EACnCW,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EACD;EACEN,IAAI,EAAE,OAAO;EACbG,SAAS,EAAEb,cAAc;EACzBc,WAAW,EAAE,CAACX,SAAS,EAAEC,SAAS,CAAC;EACnCW,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EACD;EACEN,IAAI,EAAE,SAAS;EACfG,SAAS,EAAEZ,gBAAgB;EAC3Ba,WAAW,EAAE,CAACX,SAAS;CACxB,EACD;EACEO,IAAI,EAAE,SAAS;EACfG,SAAS,EAAEX,gBAAgB;EAC3BY,WAAW,EAAE,CAACX,SAAS;CACxB,EACD;EAAEO,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAY,CAAE,CACzC;AAkCD,OAAM,MAAOM,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRvB,YAAY;IAAA;EAAA;;;iBAZb,CACTU,WAAW,EACXC,WAAW,EACXC,WAAW,EACXJ,SAAS,EACTC,SAAS,EACT;QACEe,OAAO,EAAE5B,iBAAiB;QAC1B6B,QAAQ,EAAEZ,eAAe;QACzBa,KAAK,EAAE;OACR,CACF;MAAAC,OAAA,GAjBCjC,aAAa,EACbC,gBAAgB,EAChBE,mBAAmB,EACnBC,WAAW,EACXC,YAAY,CAAC6B,OAAO,CAACd,MAAM,CAAC;IAAA;EAAA;;;2EAgBnBQ,SAAS;IAAAO,YAAA,GA9BlB7B,YAAY,EACZC,cAAc,EACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB;IAAAoB,OAAA,GAGhBjC,aAAa,EACbC,gBAAgB,EAChBE,mBAAmB,EACnBC,WAAW,EAAAgC,EAAA,CAAA/B,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}