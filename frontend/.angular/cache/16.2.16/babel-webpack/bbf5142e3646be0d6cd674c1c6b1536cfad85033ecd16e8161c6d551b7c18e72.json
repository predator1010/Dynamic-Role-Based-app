{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RoleService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api';\n  }\n  // Get all roles\n  getRoles() {\n    return this.http.get(`${this.apiUrl}/roles`);\n  }\n  // Get role by ID (Admin only)\n  getRoleById(id) {\n    return this.http.get(`${this.apiUrl}/roles/${id}`);\n  }\n  // Create new role (Admin only)\n  createRole(roleData) {\n    return this.http.post(`${this.apiUrl}/roles`, roleData);\n  }\n  // Update role (Admin only)\n  updateRole(id, roleData) {\n    return this.http.put(`${this.apiUrl}/roles/${id}`, roleData);\n  }\n  // Delete role (Admin only)\n  deleteRole(id) {\n    return this.http.delete(`${this.apiUrl}/roles/${id}`);\n  }\n  static {\n    this.ɵfac = function RoleService_Factory(t) {\n      return new (t || RoleService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleService,\n      factory: RoleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["RoleService","constructor","http","apiUrl","getRoles","get","getRoleById","id","createRole","roleData","post","updateRole","put","deleteRole","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sawoe\\Desktop\\Assignment\\frontend\\src\\app\\services\\role.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Role } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  private apiUrl = 'http://localhost:3000/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get all roles\r\n  getRoles(): Observable<Role[]> {\r\n    return this.http.get<Role[]>(`${this.apiUrl}/roles`);\r\n  }\r\n\r\n  // Get role by ID (Admin only)\r\n  getRoleById(id: string): Observable<Role> {\r\n    return this.http.get<Role>(`${this.apiUrl}/roles/${id}`);\r\n  }\r\n\r\n  // Create new role (Admin only)\r\n  createRole(roleData: Partial<Role>): Observable<Role> {\r\n    return this.http.post<Role>(`${this.apiUrl}/roles`, roleData);\r\n  }\r\n\r\n  // Update role (Admin only)\r\n  updateRole(id: string, roleData: Partial<Role>): Observable<Role> {\r\n    return this.http.put<Role>(`${this.apiUrl}/roles/${id}`, roleData);\r\n  }\r\n\r\n  // Delete role (Admin only)\r\n  deleteRole(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/roles/${id}`);\r\n  }\r\n} "],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EACtD;EAEA;EACAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,UAAUI,EAAE,EAAE,CAAC;EAC1D;EAEA;EACAC,UAAUA,CAACC,QAAuB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACP,MAAM,QAAQ,EAAEM,QAAQ,CAAC;EAC/D;EAEA;EACAE,UAAUA,CAACJ,EAAU,EAAEE,QAAuB;IAC5C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,UAAUI,EAAE,EAAE,EAAEE,QAAQ,CAAC;EACpE;EAEA;EACAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,UAAUI,EAAE,EAAE,CAAC;EACvD;;;uBA5BWP,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXlB,WAAW;MAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}